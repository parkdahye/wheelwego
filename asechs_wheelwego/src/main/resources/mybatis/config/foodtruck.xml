<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foodtruck"> 	
<resultMap type="truckVO" id="truckRM">
      <result property="foodtruckNumber" column="foodtruck_number" />
      <result property="sellerId" column="seller_id" />
      <result property="foodtruckName" column="foodtruck_name"/>     
	  <result property="fileVO.filepath" column="foodtruck_filepath"/>
	  <result property="registerTimeposted" column="register_timeposted"/>
	  <result property="wishlistCount" column="wishlist_count"/>
	  <result property="avgGrade" column="avg_grade"/>
	  <result property="foodList.fileVO.filepath" column="menu_filename"/>
</resultMap>
<resultMap type="foodVO" id="foodRM">
<result property="menuId" column="menu_id" />
<result property="foodTruckNumber" column="foodtruck_number" />
<result property="menuName" column="menu_name"/>
<result property="menuPrice" column="menu_price"/>
<result property="fileVO.filepath" column="menu_filename"/>
</resultMap>
<resultMap type="reviewVO" id="reviewRM">
	<result property="reviewNo" column="review_no"/>
	<result property="foodtruckNumber" column="foodtruck_number"/>
	<result property="customerId" column="customer_id"/>
	<result property="reviewContent" column="review_content"/>
	<result property="reviewTimeposted" column="review_timeposted"/>
</resultMap>
<select id="foodtruckList" resultMap="truckRM">
		select t.*, f.foodtruck_filepath
		from(select * from foodtruck)t, foodtruckfile f
		where t.foodtruck_number=f.foodtruck_number
</select>
<select id="searchFoodTruckList" resultMap="truckRM">
select t.*, f.foodtruck_filepath
from(select * from foodtruck)t, foodtruckfile f
where t.foodtruck_number=f.foodtruck_number and t.foodtruck_name like '%' || #{value} || '%' and latitude is not null and longitude is not null
</select>
<select id="getTruckListTotalContentCount" resultType="Integer" parameterType="string">
	select count(*) from foodtruck where foodtruck_name like '%' || #{value}|| '%' and latitude is not null and longitude is not null
</select>

<!-- <select id="pagingTruckList" parameterType="pagingBean" resultMap="truckRM" resultType="truckVO">
	select f.foodtruck_filepath, t.foodtruck_name, t.foodtruck_number FROM(
	SELECT row_number() over(order by foodtruck_number desc) as rnum, foodtruck_name, foodtruck_number from foodtruck)t, foodtruckfile f
	where t.foodtruck_number=f.foodtruck_number and rnum between #{startRowNumber} and #{endRowNumber}
</select> -->

<select id="getFoodTruckListByName" parameterType="pagingBean" resultMap="truckRM" resultType="truckVO">
	SELECT f.foodtruck_filepath, t.* FROM
	(SELECT fo.*, row_number() over(order by foodtruck_number desc) as rnum 
	from foodtruck fo where foodtruck_name like '%' || #{searchWord} || '%' and latitude is not null and longitude is not null)t, foodtruckfile f  
	where t.foodtruck_number=f.foodtruck_number and rnum between #{startRowNumber} and #{endRowNumber}
	order by t.foodtruck_number desc
</select>

<select id="foodtruckDetail" resultMap="truckRM">
select t.*, f.foodtruck_filepath
		from(select * from foodtruck)t, foodtruckfile f
		where t.foodtruck_number=f.foodtruck_number and t.foodtruck_number=#{value}
</select>
<select id="foodListDetail" resultMap="foodRM">
select * from menu where foodtruck_number=#{value}
</select>

<select id="foodTruckAndMenuDetail" parameterType="String" resultMap="truckRM">
select t.*, f.foodtruck_filepath, m.menu_filename
		from(select * from foodtruck)t, foodtruckfile f, menu m
		where t.foodtruck_number=f.foodtruck_number and t.foodtruck_number=m.foodtruck_number and t.foodtruck_number=#{value}
</select>
<select id="searchFoodTruckByGPS" resultMap="truckRM" parameterType="truckVO">
select * from (
select * from foodtruck
where (latitude between #{latitude}-0.009 and #{latitude}+0.009) and (longitude between #{longitude}-0.012 and #{longitude}+0.012)) TMP 
</select>

<insert id="registerReview" parameterType="reviewVO">
<selectKey order="BEFORE" keyProperty="reviewNo" resultType="String">
	select review_seq.nextval from dual
</selectKey>
insert into review(review_no,foodtruck_number,customer_id,review_content,review_timeposted,grade) 
values(#{reviewNo},#{foodtruckNumber},#{customerId},#{reviewContent},sysdate,#{grade})
</insert>

<select id="getReviewListByTruckNumber" resultMap="reviewRM" parameterType="pagingBean">
select * from (select row_number() over(order by review_no desc) as rnum ,review_no,foodtruck_number,customer_id,
review_content,to_char(review_timeposted,'YYYY.MM.DD') as review_timeposted, grade from review
where foodtruck_number=#{searchWord})
where rnum between #{startRowNumber} and #{endRowNumber}
</select>

<select id="getReivewTotalCount" resultType="int">
	select count(*) from review where foodtruck_number=#{value}
</select>
<select id="getAvgGradeByTruckNumber" resultType="int">
	select trunc(avg(grade),1) from review  where foodtruck_number=#{value} group by foodtruck_number
</select>

<select id="findTruckNumberInReview" resultType="int">
	select count(*) from review where foodtruck_number=#{value}
</select>
</mapper>
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















